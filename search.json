[{"path":"index.html","id":"preface","chapter":"Preface","heading":"Preface","text":"Single-cell RNA sequencing (scRNA-seq) Spatial RNA sequencing widely used techniques profiling gene expression individual cells locations histological sections. allow molecular biology studied resolution matched bulk sequencing cell populations. better visualize result reduction, spatial gene expression pattern single cell spatial experiment data, ggsc provides layer functions based ggplot2 grammar. can work SingleCellExperiment class Seurat class, widely used classes storing data single cell experiment.","code":""},{"path":"visualizing-seurat-objects.html","id":"visualizing-seurat-objects","chapter":"1 Visualizing Seurat objects","heading":"1 Visualizing Seurat objects","text":"","code":"\nlibrary(Seurat)\ndir = \"data/filtered_gene_bc_matrices/hg19\"\n\npbmc.data <- Read10X(data.dir = dir)\npbmc <- CreateSeuratObject(counts = pbmc.data, project = \"pbmc3k\", \n                          min.cells=3, min.features=200)\npbmc## An object of class Seurat \n## 13714 features across 2700 samples within 1 assay \n## Active assay: RNA (13714 features, 0 variable features)\npbmc[[\"percent.mt\"]] <- PercentageFeatureSet(pbmc, pattern = \"^MT-\")\npbmc <- subset(pbmc,\n  subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5\n)\npbmc <- NormalizeData(pbmc, normalization.method = \"LogNormalize\",\n                      scale.factor = 10000)\npbmc <- ScaleData(pbmc)\npbmc <- FindVariableFeatures(pbmc, selection.method = \"vst\",\n                             nfeatures = 2000)\npbmc <- RunPCA(pbmc, features = VariableFeatures(object = pbmc))\npbmc <- RunUMAP(pbmc, dims = 1:10)\npbmc <- FindNeighbors(pbmc, dims = 1:10)\npbmc <- FindClusters(pbmc, resolution = 0.5)## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n## \n## Number of nodes: 2638\n## Number of edges: 95927\n## \n## Running Louvain algorithm...\n## Maximum modularity in 10 random starts: 0.8728\n## Number of communities: 9\n## Elapsed time: 0 seconds\n## Assigning cell type identity to clusters\ncluster.ids <- c(\"Naive CD4 T\", \"CD14+ Mono\", \"Memory CD4 T\", \n            \"B\", \"CD8 T\", \"FCGR3A+ Mono\", \"NK\", \"DC\", \"Platelet\")\nnames(cluster.ids) <- levels(pbmc)\npbmc <- RenameIdents(pbmc, cluster.ids)"},{"path":"visualizing-seurat-objects.html","id":"dimensional-reduction-plot","chapter":"1 Visualizing Seurat objects","heading":"1.1 Dimensional reduction plot","text":"","code":"\n# DimPlot(pbmc, reduction = \"umap\",\n#        label = TRUE, pt.size = 0.5) \n\nlibrary(ggplot2)\nlibrary(ggsc)\n\nsc_dim(pbmc) + sc_dim_geom_label()\nsc_dim(pbmc) + \n    sc_dim_geom_label(geom = shadowtext::geom_shadowtext, \n            color='black', bg.color='white')"},{"path":"visualizing-seurat-objects.html","id":"visualize-features-on-a-dimensional-reduction-plot","chapter":"1 Visualizing Seurat objects","heading":"1.2 Visualize ‘features’ on a dimensional reduction plot","text":"real ‘features’ dimensional plot","code":"\nfeatures = c(\"MS4A1\", \"GNLY\", \"CD3E\", \n            \"CD14\", \"FCER1A\", \"FCGR3A\", \n            \"LYZ\", \"PPBP\", \"CD8A\")\n\n# FeaturePlot(pbmc,'CD4')\nsc_feature(pbmc, 'CD4')\nsc_feature(pbmc, features)\nsc_dim(pbmc) + \n   sc_dim_geom_feature(pbmc, 'CD4', color='black')\nsc_dim(pbmc, alpha=.3) + \n    ggnewscale::new_scale_color() + \n    sc_dim_geom_feature(pbmc, features, mapping=aes(color=features)) +\n    scale_color_viridis_d()\nsc_dim(pbmc) +\n    sc_dim_geom_feature(pbmc, 'CD4', color='black')\nsc_dim(pbmc, alpha=.3) +\n    ggnewscale::new_scale_color() +\n    sc_dim_geom_feature(pbmc, features, mapping=aes(color=features)) +\n    scale_color_viridis_d()"},{"path":"visualizing-seurat-objects.html","id":"visualize-ellipse-on-a-dimensional-reduction-plot","chapter":"1 Visualizing Seurat objects","heading":"1.3 Visualize ellipse on a dimensional reduction plot","text":"","code":"\nsc_dim(pbmc) +\n  sc_dim_geom_ellipse(level=0.95)"},{"path":"visualizing-seurat-objects.html","id":"visualize-selected-clusters","chapter":"1 Visualizing Seurat objects","heading":"1.4 Visualize selected clusters","text":"","code":"\nselected <- c(\"Naive CD4 T\", \"NK\")\nsc_dim(pbmc) + \n  sc_dim_sub(subset=selected)\nsc_dim(pbmc, color='grey') + \n  sc_dim_geom_sub(subset=selected) + \n    sc_dim_geom_label(geom = shadowtext::geom_shadowtext, \n          mapping = aes(subset = ident %in% selected),\n            color='black', bg.color='white')"},{"path":"visualizing-seurat-objects.html","id":"violin-plot-of-gene-expression","chapter":"1 Visualizing Seurat objects","heading":"1.5 Violin plot of gene expression","text":"","code":"\n# VlnPlot(pbmc,'CD4')\n\nsc_violin(pbmc, 'CD4')\n## allows applying an user-defined function to transform/filter the data\nsc_violin(pbmc, 'CD4', .fun=function(d) dplyr::filter(d, value > 0)) +\n  ggforce::geom_sina(size=.1)\n#VlnPlot(pbmc, features)\nsc_violin(pbmc, features) + \n  theme(axis.text.x = element_text(angle=45, hjust=1))"},{"path":"visualizing-seurat-objects.html","id":"spatial-features","chapter":"1 Visualizing Seurat objects","heading":"1.6 Spatial features","text":"","code":"\nlibrary(SeuratData)\n# InstallData(\"stxBrain\")\nbrain <- LoadData(\"stxBrain\", type = \"anterior1\")\n# Normalization \nbrain <- SCTransform(brain, assay = \"Spatial\", verbose = FALSE)\n\n## SpatialFeaturePlot(brain, features = c(\"Hpca\", \"Ttr\"))\\\nsc_spatial(brain, features = c(\"Hpca\", \"Ttr\"), image.mirror.axis = 'v')"},{"path":"visualizing-singlecellexperiment-or-spatialexperiment-objects.html","id":"visualizing-singlecellexperiment-or-spatialexperiment-objects","chapter":"2 Visualizing SingleCellExperiment or SpatialExperiment objects","heading":"2 Visualizing SingleCellExperiment or SpatialExperiment objects","text":"use example data single sample (sample 151673) human brain dorsolateral prefrontal cortex (DLPFC) human brain, measured using 10x Genomics Visium platform. First, brief/standard data pre-processing done scater scran packages.Firstly, filter data retain cells tissue. cell-specific biases normalized using computeSumFactors method.Next, use Graph-based clustering method reduction runPCA runTSNE functions provided scater package.","code":"\nlibrary(BiocParallel)\nlibrary(STexampleData)\nlibrary(scater)\nlibrary(scran)\nlibrary(ggplot2)\n## create ExperimentHub instance\n# eh <- ExperimentHub()\n\n## query STexampleData datasets\n# myfiles <- query(eh, \"STexampleData\")\n# spe <- myfiles[[\"EH7538\"]]\n\nspe <- readRDS(\"data/Visium_humanDLPFC.rds\")\n\nspe <- addPerCellQC(spe, subsets=list(Mito=grep(\"^MT-\", rowData(spe)$gene_name)))\ncolData(spe) |> head()## DataFrame with 6 rows and 13 columns\n##                            barcode_id     sample_id\n##                           <character>   <character>\n## AAACAACGAATAGTTC-1 AAACAACGAATAGTTC-1 sample_151673\n## AAACAAGTATCTCCCA-1 AAACAAGTATCTCCCA-1 sample_151673\n## AAACAATCTACTAGCA-1 AAACAATCTACTAGCA-1 sample_151673\n## AAACACCAATAACTGC-1 AAACACCAATAACTGC-1 sample_151673\n## AAACAGAGCGACTCCT-1 AAACAGAGCGACTCCT-1 sample_151673\n## AAACAGCTTTCAGAAG-1 AAACAGCTTTCAGAAG-1 sample_151673\n##                    in_tissue array_row array_col\n##                    <integer> <integer> <integer>\n## AAACAACGAATAGTTC-1         0         0        16\n## AAACAAGTATCTCCCA-1         1        50       102\n## AAACAATCTACTAGCA-1         1         3        43\n## AAACACCAATAACTGC-1         1        59        19\n## AAACAGAGCGACTCCT-1         1        14        94\n## AAACAGCTTTCAGAAG-1         1        43         9\n##                    ground_truth cell_count       sum\n##                     <character>  <integer> <numeric>\n## AAACAACGAATAGTTC-1           NA         NA       622\n## AAACAAGTATCTCCCA-1       Layer3          6      8458\n## AAACAATCTACTAGCA-1       Layer1         16      1667\n## AAACACCAATAACTGC-1           WM          5      3769\n## AAACAGAGCGACTCCT-1       Layer3          2      5433\n## AAACAGCTTTCAGAAG-1       Layer5          4      4278\n##                     detected subsets_Mito_sum\n##                    <numeric>        <numeric>\n## AAACAACGAATAGTTC-1       526               37\n## AAACAAGTATCTCCCA-1      3586             1407\n## AAACAATCTACTAGCA-1      1150              204\n## AAACACCAATAACTGC-1      1960              430\n## AAACAGAGCGACTCCT-1      2424             1316\n## AAACAGCTTTCAGAAG-1      2264              651\n##                    subsets_Mito_detected\n##                                <numeric>\n## AAACAACGAATAGTTC-1                     9\n## AAACAAGTATCTCCCA-1                    13\n## AAACAATCTACTAGCA-1                    11\n## AAACACCAATAACTGC-1                    13\n## AAACAGAGCGACTCCT-1                    13\n## AAACAGCTTTCAGAAG-1                    12\n##                    subsets_Mito_percent     total\n##                               <numeric> <numeric>\n## AAACAACGAATAGTTC-1              5.94855       622\n## AAACAAGTATCTCCCA-1             16.63514      8458\n## AAACAATCTACTAGCA-1             12.23755      1667\n## AAACACCAATAACTGC-1             11.40886      3769\n## AAACAGAGCGACTCCT-1             24.22234      5433\n## AAACAGCTTTCAGAAG-1             15.21739      4278\ncolData(spe) |> data.frame() |> \n  ggplot(aes(x = sum, y = detected, colour = as.factor(in_tissue))) +\n   geom_point() \nplotColData(spe, x='sum', y = 'subsets_Mito_percent', other_fields=\"in_tissue\") + facet_wrap(~in_tissue)\nspe <- spe[, spe$in_tissue == 1]\n\nclusters <- quickCluster(\n              spe, \n              BPPARAM = BiocParallel::MulticoreParam(workers=2), \n              block.BPPARAM = BiocParallel::MulticoreParam(workers=2)\n            )\n\nspe <- computeSumFactors(spe, clusters = clusters, BPPARAM = BiocParallel::MulticoreParam(workers=2))\nspe <- logNormCounts(spe)\n# identify genes that drive biological heterogeneity in the data set by \n# modelling the per-gene variance\ndec <- modelGeneVar(spe)\n\n# Get the top 15% genes.\ntop.hvgs <- getTopHVGs(dec, prop=0.15)\nspe <- runPCA(spe, subset_row=top.hvgs)\n\noutput <- getClusteredPCs(reducedDim(spe), BPPARAM = BiocParallel::MulticoreParam(workers=2))\nnpcs <- metadata(output)$chosen\nnpcs## [1] 13\nreducedDim(spe, \"PCAsub\") <- reducedDim(spe, \"PCA\")[,1:npcs,drop=FALSE]\n\ng <- buildSNNGraph(spe, use.dimred=\"PCAsub\", BPPARAM = MulticoreParam(workers=2))\ncluster <- igraph::cluster_walktrap(g)$membership\ncolLabels(spe) <- factor(cluster)\nset.seed(123)\nspe <- runTSNE(spe, dimred=\"PCAsub\", BPPARAM = MulticoreParam(workers=2))"},{"path":"visualizing-singlecellexperiment-or-spatialexperiment-objects.html","id":"dimensional-reduction-plot-1","chapter":"2 Visualizing SingleCellExperiment or SpatialExperiment objects","heading":"2.1 Dimensional reduction plot","text":", used sc_dim function provided ggsc package visualize TSNE reduction result. Unlike packages, ggsc implemented ggplot2 graphic grammar syntax visual elements overlaid combinations graphic layers. sc_dim_geom_label layer designed add cell cluster labels dimensional reduction plot, can utilized different implementation text geoms, geom_shadowtext shadowtext package geom_text ggplot2 package (default) geom argument.","code":"\nlibrary(ggsc)\nlibrary(ggplot2)\n\nsc_dim(spe, reduction = 'TSNE') + sc_dim_geom_label()\nsc_dim(spe, reduction = 'TSNE') + \n  sc_dim_geom_label(\n    geom = shadowtext::geom_shadowtext,\n    color='black', \n    bg.color='white'\n  )"},{"path":"visualizing-singlecellexperiment-or-spatialexperiment-objects.html","id":"visualize-features-on-a-dimensional-reduction-plot-1","chapter":"2 Visualizing SingleCellExperiment or SpatialExperiment objects","heading":"2.2 Visualize ‘features’ on a dimensional reduction plot","text":"visualize gene expression cells result reduction, ggsc provides sc_feature function highlight dimensional reduction plot.addition, provides sc_dim_geom_feature layer working sc_dim function visualize cells expressed gene cell clusters information simultaneously.also provides sc_dim_geom_ellipse add confidence levels cluster result, sc_dim_geom_sub select highlight specific cluster cells.","code":"\ngenes <- c('MOBP', 'PCP4', 'SNAP25', 'HBB', 'IGKC', 'NPY')\ntarget.features <- rownames(spe)[match(genes, rowData(spe)$gene_name)]\nsc_feature(spe, target.features[1], slot='logcounts', reduction = 'TSNE')\nsc_feature(spe, target.features, slot='logcounts', reduction = 'TSNE')\nsc_dim(spe, slot='logcounts', reduction = 'TSNE') +\n   sc_dim_geom_feature(spe, target.features[1], color='black')\nsc_dim(spe, alpha=.3, slot='logcounts', reduction = 'TSNE') + \n    ggnewscale::new_scale_color() + \n    sc_dim_geom_feature(spe, target.features, mapping=aes(color=features)) +\n    scale_color_viridis_d()\nsc_dim(spe, reduction = 'TSNE') +\n  sc_dim_geom_ellipse(level=0.95)\nselected.cluster <- c(1, 6, 8)\nsc_dim(spe, reduction = 'TSNE') +\n  sc_dim_sub(subset=selected.cluster, .column = 'label')\nsc_dim(spe, color='grey', reduction = 'TSNE') + \n  sc_dim_geom_sub(subset=selected.cluster, .column = 'label') + \n    sc_dim_geom_label(geom = shadowtext::geom_shadowtext, \n          mapping = aes(subset = label %in% selected.cluster),\n            color='black', bg.color='white')  "},{"path":"visualizing-singlecellexperiment-or-spatialexperiment-objects.html","id":"violin-plot-of-gene-expression-1","chapter":"2 Visualizing SingleCellExperiment or SpatialExperiment objects","heading":"2.3 Violin plot of gene expression","text":"ggsc provides sc_violin visualize expression information specific genes using violin layer common legend, genes can compared intuitively.","code":"\nsc_violin(spe, target.features[1], slot = 'logcounts')\nsc_violin(spe, target.features[1], slot = 'logcounts', \n     .fun=function(d) dplyr::filter(d, value > 0)\n     ) + \n     ggforce::geom_sina(size=.1)\nsc_violin(spe, target.features, slot = 'logcounts') + \n  theme(axis.text.x = element_text(angle=45, hjust=1))"},{"path":"visualizing-singlecellexperiment-or-spatialexperiment-objects.html","id":"spatial-features-1","chapter":"2 Visualizing SingleCellExperiment or SpatialExperiment objects","heading":"2.4 Spatial features","text":"visualize spatial pattern gene, ggsc provides sc_spatial visualize specific features/genes image information.","code":"\nlibrary(aplot)\nf <- sc_spatial(spe, features = target.features, \n           slot = 'logcounts', ncol = 3, \n           image.mirror.axis = NULL,\n           image.rotate.degree = -90\n           )\n\nf\npp <- lapply(target.features, function(i) {\n  sc_spatial(spe, features = i, slot = 'logcounts', image.rotate.degree = -90, image.mirror.axis = NULL)\n})\n\naplot::plot_list(gglist = pp)"}]
